version: '3.8'

services:
  # Frontend microservice
  usenlease-frontend:
    build:
      context: ./frontend
    container_name: usenlease-frontend
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"
    depends_on:
      - usenlease-backend
    networks:
      - app-net
    env_file:
      - .env

  # Backend microservice
  usenlease-backend:
    build:
      context: ./backend
    container_name: usenlease-backend
    stdin_open: true
    tty: true
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
    networks:
      - app-net
    env_file:
      - .env
    depends_on:
      usenlease-db:
        condition: service_healthy
    command: >
      bash -c "cd /app/backend &&
               python manage.py wait_for_db &&
               python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8000"

  # PostgreSQL service
  usenlease-db:
    image: postgres:latest
    container_name: usenlease-db
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-net
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

# Network configuration
networks:
  app-net:
    driver: bridge

# Docker volumes for persistent data
volumes:
  postgres-data:
    driver: local
