version: '3.8'

services:
  usenlease-frontend:
    image: ngumonelson123/frontend-image:v1.1.0  # Use Docker Hub image
    container_name: usenlease-frontend
    ports:
      - "3000:3000"
    depends_on:
      - usenlease-backend
    networks:
      - app-net
    env_file:
      - .env

  usenlease-backend:
    image: ngumonelson123/backend-image:v1.1.0  # Use Docker Hub image
    container_name: usenlease-backend
    ports:
      - "8000:8000"
    depends_on:
      usenlease-db:
        condition: service_healthy
    networks:
      - app-net
    env_file:
      - .env
    command: >
      bash -c "python manage.py wait_for_db &&
               python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               gunicorn EquipRentHub.wsgi:application --bind 0.0.0.0:8000 --workers=3"
    volumes:
      - ./backend/staticfiles:/app/backend/staticfiles  # Map static files directory

  usenlease-db:
    image: postgres:latest
    container_name: usenlease-db
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-net
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest  # Use official Nginx image
    container_name: usenlease-nginx
    ports:
      - "80:80"
    depends_on:
      - usenlease-frontend
      - usenlease-backend
    volumes:
      - ./backend/staticfiles:/usr/share/nginx/html/static  # Map static files
      - ./nginx.conf:/etc/nginx/nginx.conf  # Nginx configuration file
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  postgres-data:
    driver: local
