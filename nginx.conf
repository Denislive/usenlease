events {
    worker_connections 1024;  # Maximum number of simultaneous connections per worker
}

http {
    server {
        listen 80;

        server_name localhost;

        # Serve static files with caching
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 30d;  # Cache static files for 30 days
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }

        # Proxy requests to the frontend container
        location / {
            proxy_pass http://usenlease-frontend:3000;  # Forward requests to the frontend container
            proxy_set_header Host $host;  # Forward the original host header
            proxy_set_header X-Real-IP $remote_addr;  # Forward the real IP of the client
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Chain forward the client's IPs
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward the original protocol (http or https)

            # Additional security headers for better protection
            add_header X-Content-Type-Options "nosniff";
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

            # Redirect HTTP to HTTPS (if you plan to implement SSL/TLS later)
            # if ($scheme = http) {
            #     return 301 https://$host$request_uri;
            # }
        }

        # Redirect to HTTPS if necessary (commented out if not yet implemented)
        # Uncomment this block if you plan to set up SSL/TLS
        # listen 443 ssl;
        # ssl_certificate /etc/nginx/ssl/nginx.crt;
        # ssl_certificate_key /etc/nginx/ssl/nginx.key;
    }
}
